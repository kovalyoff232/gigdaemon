# Этот Blueprint основан на документации, которую предоставил ты.

# Определяем наши сервисы.
services:
  # Наш веб-сервер на Laravel.
  # Мы используем Docker, так как это единственно правильный способ для PHP,
  # согласно документации.
  - type: web
    name: gigdaemon
    region: frankfurt
    plan: free
    runtime: docker
    # buildCommand и startCommand не нужны, когда используется Docker.
    # Render будет использовать команды из файла Dockerfile в твоем репозитории.
    healthCheck:
      path: /up
    envVars:
      - key: APP_URL
        # Так как свойство 'url' невалидно, мы будем вводить его вручную
        # после первого деплоя, как и APP_KEY.
        value: https://gigdaemon.onrender.com # Заменишь на свой реальный адрес позже
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: LOG_CHANNEL
        value: stderr
      # --- ССЫЛКА НА БАЗУ ДАННЫХ ---
      # Документация говорит, что для PostgreSQL нужно использовать fromDatabase.
      # Но fromDatabase можно использовать только в envVarGroups, а не напрямую в сервисе.
      # Поэтому мы будем ссылаться на нее как на другой сервис.
      # Самый надежный способ - взять connectionString.
      - key: DATABASE_URL
        fromService:
          type: psql
          name: gigdaemon-db
          property: connectionString
      - key: APP_KEY
        sync: false # Render попросит ввести это значение при создании.

# Базы данных, согласно документации, объявляются в отдельном списке.
databases:
  - name: gigdaemon-db
    region: frankfurt
    plan: free
    postgresMajorVersion: 15